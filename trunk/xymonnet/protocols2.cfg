# protocols.cfg
#
# $Id$
#
# This file defines the way TCP services are tested by xymonnet
#
# A service definition looks like this:
#     [NAME]
#        send "HELLO"
#        expect "OK"
#        options banner,ssl,telnet
#        port PORTNUMBER
#
# The NAME is the name of the test, and of the TCP service. If
# multiple tests share a common definition (e.g. ssh, ssh1, ssh2)
# then these may be given as "[NAME1|NAME2|NAME3]"
#
# If the send-string is defined, this data is sent to the service
# immediately after a connect.
#
# If the expect-string is defined, any data returned by the service is 
# matched against this. If it matches, the status will be green; if it
# does not match, the status will turn yellow. Only if the service does
# not respond at all will the status go red. If a expect-string is not 
# defined, the status will always be green if it is possible to connect 
# to the service.
#
# The options can include "banner" (to grab the banner from the 
# service), "telnet" (telnet options are to be negotiated), and
# "ssl" (perform an SSL/TLS handshake and pick up the SSL certificate).
#
# The "port" is the TCP port used for this service. This OVERRIDES
# any port number listed in /etc/services - but this also means that
# you need not define "unusual" port-numbers in /etc/services. 
# Of course, you can always define your test in hosts.cfg to use a 
# specific portnumber.
#
# The send/expect string definitions must be in double quotes.
# The sequences "\r", "\n", "\t" and "\xNN" are recognized and
# converted into a carriage-return (ASCII 13), line-feed (ASCII 10),
# TAB (ASCII 8), and any byte respectively (NN=hex value).

[ftp]
   port 21
   expect:220
   send:quit\r\n
   expect:221
   close

[ftps]
   port 990
   options ssl
   expect:220
   send:quit\r\n
   expect:221
   close

[ssh|ssh1|ssh2]
   port 22
   expect:SSH
   send:SSH-2.0-OpenSSH_4.1\r\n
   close

[telnet]
   port 23
   options telnet
   read
   close

[telnets]
   port 992
   options ssl,telnet
   read
   close

[smtp]
   port 25
   expect:220
   send:helo xymon.com\r\n
   expect:250
   send:mail from:<xymon>\r\n
   expect:250
   send:rset\r\n
   expect:250
   send:quit\r\n
   expect:221
   close

[smtps]
   port 25
   expect:220
   send:starttls\r\n
   expect:220
   starttls
   send:helo xymon.com\r\n
   expect:250
   send:mail from:<xymon>\r\n
   expect:250
   send:rset\r\n
   expect:250
   send:quit\r\n
   expect:221
   close

[pop2|pop-2]
   port 109
   expect:+OK
   send:quit\r\n
   close

[pop|pop3|pop-3]
   port 110
   expect:+OK
   send:quit\r\n
   close

[pop3s]
   port 995
   options ssl
   expect:+OK
   send:quit\r\n
   close

[imap|imap2|imap4]
   port 143
   expect:* OK
   send:ABC123 LOGOUT\r\n
   expect:* BYE
   close

[imap3]
   port 220
   expect:* OK
   send:ABC123 LOGOUT\r\n
   expect:* BYE
   close

[imaps]
   port 993
   options ssl
   expect:* OK
   send:ABC123 LOGOUT\r\n
   expect:* BYE
   close

[nntp]
   port 119
   expect:200
   send:quit\r\n
   expect:205
   close

[nntps]
   port 563
   options ssl
   expect:200
   send:quit\r\n
   expect:205
   close

[ldap]
   port 389
   options external

[ldaps]
   port 636
   options ssl,external

[rsync]
   port 873
   expect:@RSYNCD
   close

[bbd]
   port 1984
   send:ping\n
   read
   close

[xymond]
   port 1984
   send:size:4\nping
   expect:xymond
   close

[xymonds]
  port 1984
  send:starttls\n
  expect:OK
  starttls
  send:size:4\nping\n
  expect:xymond
  close


# The AV scanning daemon from the ClamAV antivirus package
[clamd]
   port 3310
   send:PING\n
   expect:PONG
   close

# SpamAssassin spamd
[spamd]
   port 783
   send:PING SPAMC/Xymon\n
   expect:SPAMD
   close

# From http://www.mail-archive.com/whatsup_forum@list.ipswitch.com/msg06678.html
[oratns]
   port 1521
   send:\x00\x57\x00\x00\x01\x00\x00\x00\x01\x36\x01\x2C\x00\x00\x08\x00\x7F\xFF\xA3\x0A\x00\x00\x01\x00\x00\x1D\x00\x3A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x08\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00(CONNECT_DATA=(COMMAND=ping))

# qmail "Quick Mail Transfer Protocol"
[qmtp]
   port 209

# qmail "Quick Mail Queuing Protocol"
[qmqp]
   port 628

# vnc "Virtual Network Computing" - method from bb-vnc.tar.gz
# From Richard Finegold
[vnc]
   port 5900
   send:RFB 000.000\r\n
   expect:RFB
   close

# CUPS print server. It answers to HTTP requests.
[cupsd]
   port 631
   send:GET /printers\r\n
   expect:HTTP/1.1 200 OK
   close

# AJP (Apache JServ Protocol) 1.3 - sends an AJP "ping" request.
# Ref: http://tomcat.apache.org/connectors-doc/common/ajpv13a.html
# From Charles Goyard
[ajp13]
   port 8009
   send:\x12\x34\x00\x01\x0a
   expect:\x41\x42\x00\x01\x09
   close

# Microsoft Terminal Services / Remote Desktop Protocol
# From Chris Wopat (http://www.xymon.com/archive/2010/01/msg00039.html)
[rdp]
   port 3389
   send:\x03\x00\x00\x1e\x19\xe0\x00\x00\x00\x00\x00Cookie: mstshash=\r\n
   expect:\x03\x00\x00\x0b\x06\xd0"
   close

[ntp]
   port 123
   options udp,ntp

[dns]
   port 53
   options udp,dns

[dig]
   port 53
   options udp,dns

[rpc]
   port 111
   options external

